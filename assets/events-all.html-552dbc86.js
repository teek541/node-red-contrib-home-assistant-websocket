import{_ as o,r as i,o as r,c as l,a as e,b as t,d as s,e as n}from"./app-84c1d8f6.js";const d={},c=n('<h1 id="events-all" tabindex="-1"><a class="header-anchor" href="#events-all" aria-hidden="true">#</a> Events: all</h1><p>Listens for all types of events from Home Assistant with the ability to filter by event type.</p><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h2><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> Name</h3><ul><li>Type: <code>string</code></li></ul><p>the name of the node</p><h3 id="event-type" tabindex="-1"><a class="header-anchor" href="#event-type" aria-hidden="true">#</a> Event Type</h3><ul><li>Type: <code>string</code></li></ul><p>filter by event type or leave blank for all events</p>',9),h={class:"custom-container danger"},u=e("p",{class:"custom-container-title"},"DANGER",-1),p=e("p",null,"Leaving this empty will listen for all events from Home Assistant which may overload the WebSocket message queue.",-1),f={href:"https://github.com/zachowj/node-red-contrib-home-assistant-websocket/issues/153#issuecomment-539290950",target:"_blank",rel:"noopener noreferrer"},m=n('<h3 id="event-data" tabindex="-1"><a class="header-anchor" href="#event-data" aria-hidden="true">#</a> Event data</h3><ul><li>Type: <code>json</code></li></ul><p>A JSON object that will be compared to the event data. If this JSON is a subset of the event data object, the event will be emitted.</p><h3 id="output-only-after-home-assistant-is-running" tabindex="-1"><a class="header-anchor" href="#output-only-after-home-assistant-is-running" aria-hidden="true">#</a> Output only after Home Assistant is running</h3><ul><li>Type: <code>boolean</code></li></ul><p>What until Home Assistant has reported its state as <code>running</code> before outputting events. Client events will always output.</p><h3 id="expose-as" tabindex="-1"><a class="header-anchor" href="#expose-as" aria-hidden="true">#</a> Expose as</h3><ul><li>Type: <code>entity config</code></li></ul>',8),v={href:"https://github.com/zachowj/hass-node-red",target:"_blank",rel:"noopener noreferrer"},g=n('<h2 id="outputs" tabindex="-1"><a class="header-anchor" href="#outputs" aria-hidden="true">#</a> Outputs</h2><p>Value types:</p><ul><li><code>event data</code>: event received from Home Assistant</li><li><code>config</code>: config properties of the node</li></ul><h2 id="client-events" tabindex="-1"><a class="header-anchor" href="#client-events" aria-hidden="true">#</a> Client Events</h2><p>Use <code>home_assistant_client</code> as the event type to receive events from the Websocket client.</p><p>Events sent from the client:</p><ul><li><strong>connecting</strong> - when trying to connect to HA</li><li><strong>connected</strong> - after the authorization has been accepted</li><li><strong>disconnected</strong> - when the socket stops attempting to connect or disconnected after having been connected</li><li><strong>error</strong> - when a disconnect happens of the WebSocket with an error</li><li><strong>states_loaded</strong> - the first time all states are loaded from HA</li><li><strong>services_loaded</strong> - the first time all services are loaded from HA</li><li><strong>running</strong> - when HA is in a running state and states have been loaded</li></ul>',7);function b(_,y){const a=i("ExternalLinkIcon");return r(),l("div",null,[c,e("div",h,[u,p,e("p",null,[e("a",f,[t("GitHub Issue #153"),s(a)])])]),m,e("p",null,[t("Creates a switch within Home Assistant to enable/disable this node. This feature requires "),e("a",v,[t("Node-RED custom integration"),s(a)]),t(" to be installed in Home Assistant")]),g])}const w=o(d,[["render",b],["__file","events-all.html.vue"]]);export{w as default};
