import{_ as o,r as i,o as r,c,a as e,b as a,d as n,e as s}from"./app-84c1d8f6.js";const d={},h=s('<h1 id="server-config" tabindex="-1"><a class="header-anchor" href="#server-config" aria-hidden="true">#</a> Server Config</h1><p>Home Assistant connection configuration</p><h2 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> Config</h2><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> Name</h3><ul><li>Type: <code>string</code></li></ul><p>Label for this configuration, see details below for implications</p><h3 id="using-the-home-assistant-add-on" tabindex="-1"><a class="header-anchor" href="#using-the-home-assistant-add-on" aria-hidden="true">#</a> Using the Home Assistant Add-on</h3><ul><li>Type: <code>boolean</code></li></ul><p>If you&#39;re running Node-RED as a Hass.io Add-on check this. No other information is needed.</p><h3 id="base-url" tabindex="-1"><a class="header-anchor" href="#base-url" aria-hidden="true">#</a> Base URL</h3><ul><li>Type: <code>string</code></li></ul><p>The base URL and port of the Home Assistant instance can be reached at, for example: <code>http://192.168.0.100:8123</code> or <code>https://homeassistant.mysite.com</code></p><h3 id="access-token" tabindex="-1"><a class="header-anchor" href="#access-token" aria-hidden="true">#</a> Access Token</h3><ul><li>Type: <code>string</code></li></ul><p>Long-lived Access Token used to contact the API</p><h3 id="unauthorized-ssl-certificates" tabindex="-1"><a class="header-anchor" href="#unauthorized-ssl-certificates" aria-hidden="true">#</a> Unauthorized SSL Certificates</h3><ul><li>Type: <code>boolean</code></li></ul><p>This will allow you to use self-signed certificates. Only use this if you know what you&#39;re doing.</p><h3 id="state-boolean" tabindex="-1"><a class="header-anchor" href="#state-boolean" aria-hidden="true">#</a> State Boolean</h3><ul><li>Type: <code>string | delimited</code></li></ul><p>A list of strings, not case sensitive, delimited by vertical pipe, |, that will return true for State Type Boolean.</p><h3 id="enable-heartbeat" tabindex="-1"><a class="header-anchor" href="#enable-heartbeat" aria-hidden="true">#</a> Enable Heartbeat</h3><ul><li>Type: <code>boolean</code></li></ul><p>Heartbeat will send a ping message using the websocket connection to Home Assistant every X seconds. If a pong response is not received within 5 seconds Node-RED will attempt to reconnect to Home Assistant.</p><h3 id="heartbeat-interval" tabindex="-1"><a class="header-anchor" href="#heartbeat-interval" aria-hidden="true">#</a> Heartbeat Interval</h3><ul><li>Type: <code>number</code></li></ul><p>The interval at which the ping message is sent to Home Assistant. The minimum value is 10 seconds.</p><h3 id="enable-global-context-store" tabindex="-1"><a class="header-anchor" href="#enable-global-context-store" aria-hidden="true">#</a> Enable Global Context Store</h3><ul><li>Type: <code>boolean</code></li></ul><p>If enabled, the global context store will be used to store the Home Assistant connection, state, and service information. This allows you to use the information in other nodes using context functions.</p><p>Example below</p><h2 id="ui-settings" tabindex="-1"><a class="header-anchor" href="#ui-settings" aria-hidden="true">#</a> UI Settings</h2><h3 id="cache-autocomplete-results" tabindex="-1"><a class="header-anchor" href="#cache-autocomplete-results" aria-hidden="true">#</a> Cache Autocomplete Results</h3><p>Enables the caching of the JSON autocomplete requests. Enabling or disabling this may require a restart of Node-RED for it to take effect.</p><h3 id="id-selector-display" tabindex="-1"><a class="header-anchor" href="#id-selector-display" aria-hidden="true">#</a> ID Selector Display</h3><p>Which text to show in the selector after the id has been chosen.</p><h3 id="status-date-format" tabindex="-1"><a class="header-anchor" href="#status-date-format" aria-hidden="true">#</a> Status Date Format</h3><h4 id="separator" tabindex="-1"><a class="header-anchor" href="#separator" aria-hidden="true">#</a> Separator</h4><p>A string that will appear in the status of an event node between the state and date string.</p><h4 id="other-options" tabindex="-1"><a class="header-anchor" href="#other-options" aria-hidden="true">#</a> Other options</h4>',40),l={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#options",target:"_blank",rel:"noopener noreferrer"},p=s(`<h2 id="details" tabindex="-1"><a class="header-anchor" href="#details" aria-hidden="true">#</a> Details</h2><p>Every node requires a configuration attached to define how to contact Home Assistant, which is this config node&#39;s main purpose.</p><h3 id="context" tabindex="-1"><a class="header-anchor" href="#context" aria-hidden="true">#</a> Context</h3><p>Each config node will also make some data available in the global context, the <code>Name</code> value in this node is used as, camelcase, and the namespace for those values</p><p>Currently <code>states</code>, <code>services</code>, and <code>events</code> is made available in the global context. <code>states</code> is always set to all available states at startup and updated whenever state changes occur so it should be always up to date. <code>services</code> and <code>events</code> is only updated on initial deploy.</p><h3 id="context-example" tabindex="-1"><a class="header-anchor" href="#context-example" aria-hidden="true">#</a> Context Example</h3><p>Say we have a config node with the name <code>Home Assistant</code>, with an entity set up in Home Assistant as <code>switch.my_switch</code>. This state would be available within function nodes and you could fetch using something like the below code</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> haCtx <span class="token operator">=</span> global<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;homeassistant&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> configCtx <span class="token operator">=</span> haCtx<span class="token punctuation">.</span>homeAssistant<span class="token punctuation">;</span>
<span class="token keyword">const</span> entityState <span class="token operator">=</span> configCtx<span class="token punctuation">.</span>states<span class="token punctuation">[</span><span class="token string">&quot;switch.my_switch&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> entityState<span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&quot;on&quot;</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="connection-issues" tabindex="-1"><a class="header-anchor" href="#connection-issues" aria-hidden="true">#</a> Connection Issues</h2><p>Communication with Home Assistant is accomplished via a combination of WebSocket and the REST API if you are having trouble communicating with home assistant make sure you can access the API outside of node-red, but from the same server node-red is running on, using a REST client, curl, or any number of other methods to validate the connection</p><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references" aria-hidden="true">#</a> References</h2>`,11),u={href:"https://home-assistant.io/developers/rest_api",target:"_blank",rel:"noopener noreferrer"};function f(m,b){const t=i("ExternalLinkIcon");return r(),c("div",null,[h,e("p",null,[a("The other options are directly from "),e("a",l,[a("DateTimeFormat Options"),n(t)]),a(".")]),p,e("p",null,[e("a",u,[a("Home Assistant REST API"),n(t)])])])}const x=o(d,[["render",f],["__file","config-server.html.vue"]]);export{x as default};
